[09:20:32][DEBUG](com.nucco.beans.User) - { CALL PG_AUTH.LOGIN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
[09:20:32][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[09:20:32][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[09:20:40][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[09:20:40][DEBUG](com.nucco.beans.Sales) - SELECT SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A ORDER BY NAME
[09:20:41][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_STEP' AND CODE <> '000' ORDER BY CODE
[09:20:41][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[09:20:41][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[09:20:42][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[09:20:42][DEBUG](com.nucco.beans.Sales) - SELECT SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A ORDER BY NAME
[09:20:42][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[09:20:42][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[09:20:47][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[09:20:47][DEBUG](com.nucco.beans.Sales) - SELECT SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A ORDER BY NAME
[09:20:47][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[09:20:47][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[09:21:07][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[09:21:07][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[09:21:07][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 4338 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_CLOSING_DATE) */ CLOSING_DATE AS YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED FROM TB_SALES A WHERE CLOSING_DATE BETWEEN '20210218' AND '20210218' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 739 AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = 739 AND SEQ IN ( SELECT 4338 FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = 1045 ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) AND VM_PLACE_SEQ = 19960 AND A.PAY_TYPE <> '09' GROUP BY CLOSING_DATE, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE UNION ALL SELECT YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE2 AS PAY_DATE, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ CASE WHEN (CANCEL_DATE || CANCEL_TIME) < (CLOSING_DATE || CLOSING_TIME) THEN CLOSING_DATE ELSE ( SELECT /*+ INDEX(TB_TXT_CLOSING) */ SUBSTR(MIN(CLOSING_DATE || CLOSING_TIME), 1, 8) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) ) END AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES A WHERE PAY_STEP = '29' AND CLOSING_DATE IS NOT NULL AND A.COMPANY_SEQ = 739 AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = 739 AND SEQ IN ( SELECT 4338 FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = 1045 ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) AND VM_PLACE_SEQ = 19960 AND A.PAY_TYPE <> '09' AND (CANCEL_DATE || CANCEL_TIME) BETWEEN ( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) || '0' FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < '20210218' ) AND ( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) <= '20210218235959' ) AND CLOSING_DATE <= '20210218' AND CANCEL_DATE <= '20210218' ) A WHERE YYYYMMDD BETWEEN '20210218' AND '20210218' GROUP BY YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE2 ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, YYYYMMDD, VM_CODE, A.PAY_DATE NULLS FIRST, A.AMOUNT_CARD DESC
[09:21:08][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 739 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[09:21:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '02'
[09:21:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 739
[09:21:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ REVERSE(LTRIM(SYS_CONNECT_BY_PATH(REVERSE(NAME), '/'), '/')) FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 START WITH SEQ = 4338 CONNECT BY SEQ = PRIOR PARENT_SEQ
[09:21:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_VENDING_MACHINE_PLACE) */ PLACE FROM TB_VENDING_MACHINE_PLACE WHERE SEQ = 19960
[09:21:19][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[09:21:19][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[09:21:19][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 4338 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_CLOSING_DATE) */ CLOSING_DATE AS YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED FROM TB_SALES A WHERE CLOSING_DATE BETWEEN '20210218' AND '20210218' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 739 AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = 739 AND SEQ IN ( SELECT 4338 FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = 1045 ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) AND VM_PLACE_SEQ = 19960 AND A.PAY_TYPE <> '09' GROUP BY CLOSING_DATE, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE UNION ALL SELECT YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE2 AS PAY_DATE, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ CASE WHEN (CANCEL_DATE || CANCEL_TIME) < (CLOSING_DATE || CLOSING_TIME) THEN CLOSING_DATE ELSE ( SELECT /*+ INDEX(TB_TXT_CLOSING) */ SUBSTR(MIN(CLOSING_DATE || CLOSING_TIME), 1, 8) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) ) END AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES A WHERE PAY_STEP = '29' AND CLOSING_DATE IS NOT NULL AND A.COMPANY_SEQ = 739 AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = 739 AND SEQ IN ( SELECT 4338 FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = 1045 ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) AND VM_PLACE_SEQ = 19960 AND A.PAY_TYPE <> '09' AND (CANCEL_DATE || CANCEL_TIME) BETWEEN ( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) || '0' FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < '20210218' ) AND ( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) <= '20210218235959' ) AND CLOSING_DATE <= '20210218' AND CANCEL_DATE <= '20210218' ) A WHERE YYYYMMDD BETWEEN '20210218' AND '20210218' GROUP BY YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE2 ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, YYYYMMDD, VM_CODE, A.PAY_DATE NULLS FIRST, A.AMOUNT_CARD DESC
[09:21:19][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 739 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[09:21:19][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '02'
[09:21:19][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 739
[09:21:19][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ REVERSE(LTRIM(SYS_CONNECT_BY_PATH(REVERSE(NAME), '/'), '/')) FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 START WITH SEQ = 4338 CONNECT BY SEQ = PRIOR PARENT_SEQ
[09:21:19][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_VENDING_MACHINE_PLACE) */ PLACE FROM TB_VENDING_MACHINE_PLACE WHERE SEQ = 19960
[09:26:43][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[09:26:43][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[09:26:43][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 4338 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_CLOSING_DATE) */ CLOSING_DATE AS YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED FROM TB_SALES A WHERE CLOSING_DATE BETWEEN '20210218' AND '20210218' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 739 AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = 739 AND SEQ IN ( SELECT 4338 FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = 1045 ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) AND VM_PLACE_SEQ = 19960 AND PAY_TYPE IN ('11') GROUP BY CLOSING_DATE, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE UNION ALL SELECT YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE2 AS PAY_DATE, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ CASE WHEN (CANCEL_DATE || CANCEL_TIME) < (CLOSING_DATE || CLOSING_TIME) THEN CLOSING_DATE ELSE ( SELECT /*+ INDEX(TB_TXT_CLOSING) */ SUBSTR(MIN(CLOSING_DATE || CLOSING_TIME), 1, 8) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) ) END AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES A WHERE PAY_STEP = '29' AND CLOSING_DATE IS NOT NULL AND A.COMPANY_SEQ = 739 AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = 739 AND SEQ IN ( SELECT 4338 FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = 1045 ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) AND VM_PLACE_SEQ = 19960 AND PAY_TYPE IN ('11') AND (CANCEL_DATE || CANCEL_TIME) BETWEEN ( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) || '0' FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < '20210218' ) AND ( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) <= '20210218235959' ) AND CLOSING_DATE <= '20210218' AND CANCEL_DATE <= '20210218' ) A WHERE YYYYMMDD BETWEEN '20210218' AND '20210218' GROUP BY YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, PAY_DATE2 ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, YYYYMMDD, VM_CODE, A.PAY_DATE NULLS FIRST, A.AMOUNT_CARD DESC
[09:26:43][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 739 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[09:26:43][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '02'
[09:26:43][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 739
[09:26:43][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ REVERSE(LTRIM(SYS_CONNECT_BY_PATH(REVERSE(NAME), '/'), '/')) FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 START WITH SEQ = 4338 CONNECT BY SEQ = PRIOR PARENT_SEQ
[09:26:43][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_VENDING_MACHINE_PLACE) */ PLACE FROM TB_VENDING_MACHINE_PLACE WHERE SEQ = 19960
