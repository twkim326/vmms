[10:22:42][DEBUG](com.nucco.beans.User) - { CALL PG_AUTH.LOGIN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
[10:22:42][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[10:22:43][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[10:22:51][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[10:22:51][DEBUG](com.nucco.beans.Sales) - SELECT SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A ORDER BY NAME
[10:22:51][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[10:22:52][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[10:22:58][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[10:22:58][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[10:22:58][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D) */ A.*, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_TRANSACTION_DATE) */ TRANSACTION_DATE AS YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY FROM TB_SALES A WHERE TRANSACTION_DATE BETWEEN '20210513' AND '20210513' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 1639 AND A.PAY_TYPE <> '09' GROUP BY TRANSACTION_DATE, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ UNION ALL SELECT YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ CANCEL_DATE AS YYYYMMDD, A.* FROM TB_SALES A WHERE PAY_STEP = '29' AND TRANSACTION_DATE IS NOT NULL AND A.COMPANY_SEQ = 1639 AND A.PAY_TYPE <> '09' AND CANCEL_DATE BETWEEN '20210513' AND '20210513' ) A WHERE YYYYMMDD BETWEEN '20210513' AND '20210513' GROUP BY YYYYMMDD, COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY YYYYMMDD DESC, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[10:22:59][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 1639 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[10:22:59][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '01'
[10:22:59][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 1639
[10:31:44][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[10:31:44][DEBUG](com.nucco.beans.Sales) - SELECT SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A ORDER BY NAME
[10:31:45][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[10:31:45][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[10:32:28][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[10:32:29][DEBUG](com.nucco.beans.VM) - SELECT COUNT(*) FROM TB_VENDING_MACHINE A 
[10:32:29][DEBUG](com.nucco.beans.VM) - SELECT  A.SEQ, A.CODE, A.PLACE, A.TERMINAL_ID, A.MODEL, A.IS_SOLD_OUT, A.IS_CONTROL_ERROR, A.IS_PD_ERROR, A.IS_EMPTY_COL, A.ASP_CHARGE, TO_CHAR(A.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE, A.COMPANY, A.ORGAN, A.USER_NAME, A.USER_ID,  A.PLACE_CODE,  A.PLACE_NO  ,(SELECT /*+ INDEX(D) */ TO_CHAR(D.CREATE_DATE, 'YYYY-MM-DD HH24:MI:SS')  FROM TB_TXT_STATUS D WHERE A.TERMINAL_ID = D.TERMINAL_ID AND A.TRANSACTION_NO = D.TRANSACTION_NO AND D.CREATE_DATE >= SYSDATE - 1) AS COLLECT_DATE, A.ACCESS_STATUS AS ACCESS_STATUS,  A.MERCHANTNAME,   A.BUSINESSNO,   A.BIZTYPE  FROM ( SELECT ROWNUM AS ROW_NUM, A.* FROM ( SELECT /*+ ORDERED USE_HASH(B C) */ B.NAME AS COMPANY, ( SELECT /*+ INDEX(E) */ REVERSE(LTRIM(SYS_CONNECT_BY_PATH(REVERSE(CASE WHEN IS_ENABLED = 'N' THEN '{' || NAME || '}' ELSE NAME END), '/'), '/')) FROM TB_ORGANIZATION E WHERE PARENT_SEQ = 0 START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ ) AS ORGAN, CASE WHEN A.PLACE_CODE IS NULL THEN A.PLACE ELSE '[' || A.PLACE_CODE || '] ' || A.PLACE END PLACE, A.TERMINAL_ID, A.SEQ, A.CODE, A.MODEL, A.IS_SOLD_OUT, A.IS_CONTROL_ERROR, A.IS_PD_ERROR, A.IS_EMPTY_COL, A.ASP_CHARGE, A.CREATE_DATE, A.TRANSACTION_NO, A.PLACE_CODE, A.PLACE_NO, C.ID AS USER_ID, C.NAME AS USER_NAME, A.ACCESS_STATUS AS ACCESS_STATUS, MST.MERCHANTNAME, MST.BUSINESSNO, MST.BIZTYPE FROM TB_VENDING_MACHINE A INNER JOIN TB_COMPANY B ON A.COMPANY_SEQ = B.SEQ LEFT JOIN TB_USER C ON A.USER_SEQ = C.SEQ LEFT JOIN TB_TXT_STATUS D ON A.TRANSACTION_NO = D.TRANSACTION_NO  JOIN TBLTERMMST@VANBT TERMST ON     TERMST.TERMINALID = A.TERMINAL_ID   JOIN TBLBIZMST@VANBT MST ON   TERMST.BUSINESSNO = MST.BUSINESSNO AND MST.BIZTYPE=TERMST.BIZTYPE ORDER BY 1, 2, 3, 4 ) A WHERE ROWNUM <= 30 ) A WHERE ROW_NUM >= 1
[10:32:32][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[10:32:32][DEBUG](com.nucco.beans.User) - SELECT  COUNT(*) FROM TB_USER A
[10:32:32][DEBUG](com.nucco.beans.User) - SELECT /*+ ORDERED USE_NL(C) */ AAA.SEQ, AAA.ID, AAA.NAME, AAA.CELLPHONE, AAA.IS_SMS_SOLDOUT, AAA.IS_SMS_STATE, AAA.IS_SMS_CLOSING, AAA.IS_KAKAO_STATUS, TO_CHAR(AAA.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE, AAA.COMPANY, AAA.ORGAN, CASE WHEN AAA.AUTH_SEQ = 0 THEN '시스템' ELSE C.NAME END AS AUTH FROM ( SELECT ROWNUM AS ROW_NUM, AA.* FROM ( SELECT /*+ ORDERED USE_HASH(B) */ B.NAME AS COMPANY, ( SELECT /*+ INDEX(D) */ REVERSE(LTRIM(SYS_CONNECT_BY_PATH(REVERSE(CASE WHEN IS_ENABLED = 'N' THEN '{' || NAME || '}' ELSE NAME END), '/'), '/')) FROM TB_ORGANIZATION D WHERE PARENT_SEQ = 0 START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ ) AS ORGAN, A.ID, A.SEQ, A.NAME, A.CELLPHONE, A.IS_SMS_SOLDOUT, A.IS_SMS_STATE, A.IS_SMS_CLOSING, A.IS_KAKAO_STATUS, A.CREATE_DATE, A.AUTH_SEQ FROM TB_USER A LEFT JOIN TB_COMPANY B ON A.COMPANY_SEQ = B.SEQ ORDER BY 1, 2, 3 ) AA WHERE ROWNUM <= 30 ) AAA LEFT JOIN TB_AUTH C ON AAA.AUTH_SEQ = C.SEQ WHERE ROW_NUM >= 1
[10:33:06][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[10:33:06][DEBUG](com.nucco.beans.User) - SELECT  /*+ INDEX(A) */ COUNT(*) FROM TB_USER A WHERE A.COMPANY_SEQ = 1639
[10:33:06][DEBUG](com.nucco.beans.User) - SELECT /*+ ORDERED USE_NL(C) */ AAA.SEQ, AAA.ID, AAA.NAME, AAA.CELLPHONE, AAA.IS_SMS_SOLDOUT, AAA.IS_SMS_STATE, AAA.IS_SMS_CLOSING, AAA.IS_KAKAO_STATUS, TO_CHAR(AAA.CREATE_DATE, 'YYYY-MM-DD') AS CREATE_DATE, AAA.COMPANY, AAA.ORGAN, CASE WHEN AAA.AUTH_SEQ = 0 THEN '시스템' ELSE C.NAME END AS AUTH FROM ( SELECT ROWNUM AS ROW_NUM, AA.* FROM ( SELECT /*+ ORDERED INDEX(A) USE_HASH(B) */ B.NAME AS COMPANY, ( SELECT /*+ INDEX(D) */ REVERSE(LTRIM(SYS_CONNECT_BY_PATH(REVERSE(CASE WHEN IS_ENABLED = 'N' THEN '{' || NAME || '}' ELSE NAME END), '/'), '/')) FROM TB_ORGANIZATION D WHERE PARENT_SEQ = 0 START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ ) AS ORGAN, A.ID, A.SEQ, A.NAME, A.CELLPHONE, A.IS_SMS_SOLDOUT, A.IS_SMS_STATE, A.IS_SMS_CLOSING, A.IS_KAKAO_STATUS, A.CREATE_DATE, A.AUTH_SEQ FROM TB_USER A LEFT JOIN TB_COMPANY B ON A.COMPANY_SEQ = B.SEQ WHERE A.COMPANY_SEQ = 1639 ORDER BY 1, 2, 3 ) AA WHERE ROWNUM <= 30 ) AAA LEFT JOIN TB_AUTH C ON AAA.AUTH_SEQ = C.SEQ WHERE ROW_NUM >= 1
