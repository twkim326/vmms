[13:41:41][DEBUG](com.nucco.beans.User) - { CALL PG_AUTH.LOGIN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
[13:41:42][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:41:43][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:43:35][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:43:35][DEBUG](com.nucco.beans.Sales) - SELECT SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A ORDER BY NAME
[13:43:41][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[13:43:41][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:43:45][DEBUG](com.nucco.beans.User) - UPDATE /*+ INDEX(A) */ TB_USER_LOG A SET OUT_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD'), OUT_TIME = TO_CHAR(SYSDATE, 'HH24MISS'), OUT_IP = ? WHERE SEQ = ? AND HASH_DATA = ?
[13:43:55][DEBUG](com.nucco.beans.User) - { CALL PG_AUTH.LOGIN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
[13:43:55][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:43:56][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:44:04][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:44:04][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(A) */ SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A WHERE SEQ = ? ORDER BY NAME
[13:44:04][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = ? AND DEPTH = 0 AND SORT = 0 AND ROWNUM = 1
[13:44:04][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ, NAME FROM TB_ORGANIZATION WHERE DEPTH = 0 AND SORT = 1 AND COMPANY_SEQ = ? ORDER BY NAME, SEQ
[13:44:04][DEBUG](com.nucco.beans.Sales) - SELECT /*+ ORDERED INDEX(A) USE_NL(B C) */ B.SEQ, B.PLACE, B.END_DATE FROM TB_VENDING_MACHINE_HISTORY A INNER JOIN TB_VENDING_MACHINE_PLACE B ON A.VM_SEQ = B.VM_SEQ AND ( A.END_DATE IS NULL OR A.END_DATE <= B.END_DATE ) INNER JOIN TB_VENDING_MACHINE C ON A.VM_SEQ = C.SEQ WHERE A.COMPANY_SEQ = ? AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = ? AND PARENT_SEQ IN ( SELECT ? FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) GROUP BY B.PLACE, B.SEQ, B.END_DATE ORDER BY B.PLACE, B.SEQ
[13:44:12][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[13:44:13][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:49:38][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:49:38][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[13:49:38][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES A WHERE PAY_DATE BETWEEN '20210201' AND '20210228' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210201', -5) AND F_GET_WORKDAY@VANBT('20210228', -5) ) A WHERE YYYYMMDD BETWEEN '20210201' AND '20210228' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[13:49:45][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 74 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[13:49:45][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[13:49:45][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 74
[13:51:02][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:51:02][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(A) */ SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A WHERE SEQ = ? ORDER BY NAME
[13:51:02][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = ? AND DEPTH = 0 AND SORT = 0 AND ROWNUM = 1
[13:51:02][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ, NAME FROM TB_ORGANIZATION WHERE DEPTH = 0 AND SORT = 1 AND COMPANY_SEQ = ? ORDER BY NAME, SEQ
[13:51:03][DEBUG](com.nucco.beans.Sales) - SELECT /*+ ORDERED INDEX(A) USE_NL(B C) */ B.SEQ, B.PLACE, B.END_DATE FROM TB_VENDING_MACHINE_HISTORY A INNER JOIN TB_VENDING_MACHINE_PLACE B ON A.VM_SEQ = B.VM_SEQ AND ( A.END_DATE IS NULL OR A.END_DATE <= B.END_DATE ) INNER JOIN TB_VENDING_MACHINE C ON A.VM_SEQ = C.SEQ WHERE A.COMPANY_SEQ = ? AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = ? AND PARENT_SEQ IN ( SELECT ? FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) GROUP BY B.PLACE, B.SEQ, B.END_DATE ORDER BY B.PLACE, B.SEQ
[13:51:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[13:51:09][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:51:14][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:51:14][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[13:51:14][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_KCS A WHERE PAY_DATE BETWEEN '20210201' AND '20210228' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210201', -5) AND F_GET_WORKDAY@VANBT('20210228', -5) ) A WHERE YYYYMMDD BETWEEN '20210201' AND '20210228' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[13:51:15][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 74 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[13:51:15][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[13:51:15][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 74
[13:52:00][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:52:00][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(A) */ SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A WHERE SEQ = ? ORDER BY NAME
[13:52:00][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = ? AND DEPTH = 0 AND SORT = 0 AND ROWNUM = 1
[13:52:00][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ, NAME FROM TB_ORGANIZATION WHERE DEPTH = 0 AND SORT = 1 AND COMPANY_SEQ = ? ORDER BY NAME, SEQ
[13:52:00][DEBUG](com.nucco.beans.Sales) - SELECT /*+ ORDERED INDEX(A) USE_NL(B C) */ B.SEQ, B.PLACE, B.END_DATE FROM TB_VENDING_MACHINE_HISTORY A INNER JOIN TB_VENDING_MACHINE_PLACE B ON A.VM_SEQ = B.VM_SEQ AND ( A.END_DATE IS NULL OR A.END_DATE <= B.END_DATE ) INNER JOIN TB_VENDING_MACHINE C ON A.VM_SEQ = C.SEQ WHERE A.COMPANY_SEQ = ? AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = ? AND PARENT_SEQ IN ( SELECT ? FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) GROUP BY B.PLACE, B.SEQ, B.END_DATE ORDER BY B.PLACE, B.SEQ
[13:52:07][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[13:52:08][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:52:08][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:52:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(A) */ SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A WHERE SEQ = ? ORDER BY NAME
[13:52:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(A) */ SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A WHERE SEQ = ? ORDER BY NAME
[13:52:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = ? AND DEPTH = 0 AND SORT = 0 AND ROWNUM = 1
[13:52:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = ? AND DEPTH = 0 AND SORT = 0 AND ROWNUM = 1
[13:52:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ, NAME FROM TB_ORGANIZATION WHERE DEPTH = 0 AND SORT = 1 AND COMPANY_SEQ = ? ORDER BY NAME, SEQ
[13:52:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ, NAME FROM TB_ORGANIZATION WHERE DEPTH = 0 AND SORT = 1 AND COMPANY_SEQ = ? ORDER BY NAME, SEQ
[13:52:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ ORDERED INDEX(A) USE_NL(B C) */ B.SEQ, B.PLACE, B.END_DATE FROM TB_VENDING_MACHINE_HISTORY A INNER JOIN TB_VENDING_MACHINE_PLACE B ON A.VM_SEQ = B.VM_SEQ AND ( A.END_DATE IS NULL OR A.END_DATE <= B.END_DATE ) INNER JOIN TB_VENDING_MACHINE C ON A.VM_SEQ = C.SEQ WHERE A.COMPANY_SEQ = ? AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = ? AND PARENT_SEQ IN ( SELECT ? FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) GROUP BY B.PLACE, B.SEQ, B.END_DATE ORDER BY B.PLACE, B.SEQ
[13:52:08][DEBUG](com.nucco.beans.Sales) - SELECT /*+ ORDERED INDEX(A) USE_NL(B C) */ B.SEQ, B.PLACE, B.END_DATE FROM TB_VENDING_MACHINE_HISTORY A INNER JOIN TB_VENDING_MACHINE_PLACE B ON A.VM_SEQ = B.VM_SEQ AND ( A.END_DATE IS NULL OR A.END_DATE <= B.END_DATE ) INNER JOIN TB_VENDING_MACHINE C ON A.VM_SEQ = C.SEQ WHERE A.COMPANY_SEQ = ? AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = ? AND PARENT_SEQ IN ( SELECT ? FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) GROUP BY B.PLACE, B.SEQ, B.END_DATE ORDER BY B.PLACE, B.SEQ
[13:52:10][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:52:11][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(A) */ SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A WHERE SEQ = ? ORDER BY NAME
[13:52:11][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = ? AND DEPTH = 0 AND SORT = 0 AND ROWNUM = 1
[13:52:11][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ, NAME FROM TB_ORGANIZATION WHERE DEPTH = 0 AND SORT = 1 AND COMPANY_SEQ = ? ORDER BY NAME, SEQ
[13:52:11][DEBUG](com.nucco.beans.Sales) - SELECT /*+ ORDERED INDEX(A) USE_NL(B C) */ B.SEQ, B.PLACE, B.END_DATE FROM TB_VENDING_MACHINE_HISTORY A INNER JOIN TB_VENDING_MACHINE_PLACE B ON A.VM_SEQ = B.VM_SEQ AND ( A.END_DATE IS NULL OR A.END_DATE <= B.END_DATE ) INNER JOIN TB_VENDING_MACHINE C ON A.VM_SEQ = C.SEQ WHERE A.COMPANY_SEQ = ? AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = ? AND PARENT_SEQ IN ( SELECT ? FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) GROUP BY B.PLACE, B.SEQ, B.END_DATE ORDER BY B.PLACE, B.SEQ
[13:52:15][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[13:52:15][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[13:52:18][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[13:52:18][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:52:21][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:52:21][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[13:52:21][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_KCS A WHERE PAY_DATE BETWEEN '20210201' AND '20210228' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES_KCS A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210201', -5) AND F_GET_WORKDAY@VANBT('20210228', -5) ) A WHERE YYYYMMDD BETWEEN '20210201' AND '20210228' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[13:52:21][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 74 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[13:52:21][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[13:52:21][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 74
[13:52:37][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[13:52:37][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[13:52:37][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_KCS A WHERE PAY_DATE BETWEEN '20210202' AND '20210302' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES_KCS A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210202', -5) AND F_GET_WORKDAY@VANBT('20210302', -5) ) A WHERE YYYYMMDD BETWEEN '20210202' AND '20210302' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[13:52:37][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 74 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[13:52:37][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[13:52:37][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 74
[14:06:03][DEBUG](com.nucco.beans.User) - UPDATE /*+ INDEX(A) */ TB_USER_LOG A SET OUT_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD'), OUT_TIME = TO_CHAR(SYSDATE, 'HH24MISS'), OUT_IP = ? WHERE SEQ = ? AND HASH_DATA = ?
[14:06:23][DEBUG](com.nucco.beans.User) - { CALL PG_AUTH.LOGIN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
[14:06:23][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:06:27][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:06:27][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(A) */ SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A WHERE SEQ = ? ORDER BY NAME
[14:06:27][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = ? AND DEPTH = 0 AND SORT = 0 AND ROWNUM = 1
[14:06:27][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ, NAME FROM TB_ORGANIZATION WHERE DEPTH = 0 AND SORT = 1 AND COMPANY_SEQ = ? ORDER BY NAME, SEQ
[14:06:27][DEBUG](com.nucco.beans.Sales) - SELECT /*+ ORDERED INDEX(A) USE_NL(B C) */ B.SEQ, B.PLACE, B.END_DATE FROM TB_VENDING_MACHINE_HISTORY A INNER JOIN TB_VENDING_MACHINE_PLACE B ON A.VM_SEQ = B.VM_SEQ AND ( A.END_DATE IS NULL OR A.END_DATE <= B.END_DATE ) INNER JOIN TB_VENDING_MACHINE C ON A.VM_SEQ = C.SEQ WHERE A.COMPANY_SEQ = ? AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = ? AND PARENT_SEQ IN ( SELECT ? FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) GROUP BY B.PLACE, B.SEQ, B.END_DATE ORDER BY B.PLACE, B.SEQ
[14:06:28][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[14:06:28][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:06:32][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:06:32][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[14:06:32][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_KCS A WHERE PAY_DATE BETWEEN '20210201' AND '20210228' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 80 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES_KCS A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 80 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210201', -5) AND F_GET_WORKDAY@VANBT('20210228', -5) ) A WHERE YYYYMMDD BETWEEN '20210201' AND '20210228' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[14:06:33][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 80 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[14:06:33][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[14:06:33][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 80
[14:07:06][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:07:07][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[14:07:07][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_KCS A WHERE PAY_DATE BETWEEN '20210201' AND '20210228' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 80 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES_KCS A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 80 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210201', -5) AND F_GET_WORKDAY@VANBT('20210228', -5) ) A WHERE YYYYMMDD BETWEEN '20210201' AND '20210228' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[14:07:07][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 80 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[14:07:07][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[14:07:07][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 80
[14:07:35][DEBUG](com.nucco.beans.User) - UPDATE /*+ INDEX(A) */ TB_USER_LOG A SET OUT_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD'), OUT_TIME = TO_CHAR(SYSDATE, 'HH24MISS'), OUT_IP = ? WHERE SEQ = ? AND HASH_DATA = ?
[14:07:47][DEBUG](com.nucco.beans.User) - { CALL PG_AUTH.LOGIN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
[14:07:47][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:07:51][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:07:52][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(A) */ SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A WHERE SEQ = ? ORDER BY NAME
[14:07:52][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = ? AND DEPTH = 0 AND SORT = 0 AND ROWNUM = 1
[14:07:52][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ, NAME FROM TB_ORGANIZATION WHERE DEPTH = 0 AND SORT = 1 AND COMPANY_SEQ = ? ORDER BY NAME, SEQ
[14:07:52][DEBUG](com.nucco.beans.Sales) - SELECT /*+ ORDERED INDEX(A) USE_NL(B C) */ B.SEQ, B.PLACE, B.END_DATE FROM TB_VENDING_MACHINE_HISTORY A INNER JOIN TB_VENDING_MACHINE_PLACE B ON A.VM_SEQ = B.VM_SEQ AND ( A.END_DATE IS NULL OR A.END_DATE <= B.END_DATE ) INNER JOIN TB_VENDING_MACHINE C ON A.VM_SEQ = C.SEQ WHERE A.COMPANY_SEQ = ? AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = ? AND PARENT_SEQ IN ( SELECT ? FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) GROUP BY B.PLACE, B.SEQ, B.END_DATE ORDER BY B.PLACE, B.SEQ
[14:07:52][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[14:07:52][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:07:55][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:07:55][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[14:07:55][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_KCS A WHERE PAY_DATE BETWEEN '20210201' AND '20210228' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 732 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES_KCS A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 732 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210201', -5) AND F_GET_WORKDAY@VANBT('20210228', -5) ) A WHERE YYYYMMDD BETWEEN '20210201' AND '20210228' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[14:07:55][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 732 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[14:07:55][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[14:07:55][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 732
[14:07:58][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:07:58][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[14:07:58][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_KCS A WHERE PAY_DATE BETWEEN '20210201' AND '20210228' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 732 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES_KCS A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 732 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210201', -5) AND F_GET_WORKDAY@VANBT('20210228', -5) ) A WHERE YYYYMMDD BETWEEN '20210201' AND '20210228' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[14:07:58][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 732 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[14:07:58][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[14:07:58][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 732
[14:09:57][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:09:58][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[14:09:58][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_LG A WHERE PAY_DATE BETWEEN '20210201' AND '20210228' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 732 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES_LG A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 732 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210201', -5) AND F_GET_WORKDAY@VANBT('20210228', -5) ) A WHERE YYYYMMDD BETWEEN '20210201' AND '20210228' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[14:09:59][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 732 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[14:09:59][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[14:09:59][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 732
[14:10:06][DEBUG](com.nucco.beans.User) - UPDATE /*+ INDEX(A) */ TB_USER_LOG A SET OUT_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD'), OUT_TIME = TO_CHAR(SYSDATE, 'HH24MISS'), OUT_IP = ? WHERE SEQ = ? AND HASH_DATA = ?
[14:10:13][DEBUG](com.nucco.beans.User) - { CALL PG_AUTH.LOGIN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
[14:10:14][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:10:17][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:10:18][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(A) */ SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A WHERE SEQ = ? ORDER BY NAME
[14:10:18][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = ? AND DEPTH = 0 AND SORT = 0 AND ROWNUM = 1
[14:10:18][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ, NAME FROM TB_ORGANIZATION WHERE DEPTH = 0 AND SORT = 1 AND COMPANY_SEQ = ? ORDER BY NAME, SEQ
[14:10:18][DEBUG](com.nucco.beans.Sales) - SELECT /*+ ORDERED INDEX(A) USE_NL(B C) */ B.SEQ, B.PLACE, B.END_DATE FROM TB_VENDING_MACHINE_HISTORY A INNER JOIN TB_VENDING_MACHINE_PLACE B ON A.VM_SEQ = B.VM_SEQ AND ( A.END_DATE IS NULL OR A.END_DATE <= B.END_DATE ) INNER JOIN TB_VENDING_MACHINE C ON A.VM_SEQ = C.SEQ WHERE A.COMPANY_SEQ = ? AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = ? AND PARENT_SEQ IN ( SELECT ? FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) GROUP BY B.PLACE, B.SEQ, B.END_DATE ORDER BY B.PLACE, B.SEQ
[14:10:18][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[14:10:18][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:10:27][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:10:28][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[14:10:28][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_LG A WHERE PAY_DATE BETWEEN '20210202' AND '20210302' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 732 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES_LG A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 732 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210202', -5) AND F_GET_WORKDAY@VANBT('20210302', -5) ) A WHERE YYYYMMDD BETWEEN '20210202' AND '20210302' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[14:10:28][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 732 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[14:10:28][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[14:10:28][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 732
[14:10:36][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:10:36][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[14:10:36][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_LG A WHERE PAY_DATE BETWEEN '20210202' AND '20210302' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 732 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES_LG A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 732 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210202', -5) AND F_GET_WORKDAY@VANBT('20210302', -5) ) A WHERE YYYYMMDD BETWEEN '20210202' AND '20210302' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[14:10:36][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 732 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[14:10:36][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[14:10:36][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 732
[14:11:01][DEBUG](com.nucco.beans.User) - UPDATE /*+ INDEX(A) */ TB_USER_LOG A SET OUT_DATE = TO_CHAR(SYSDATE, 'YYYYMMDD'), OUT_TIME = TO_CHAR(SYSDATE, 'HH24MISS'), OUT_IP = ? WHERE SEQ = ? AND HASH_DATA = ?
[14:11:14][DEBUG](com.nucco.beans.User) - { CALL PG_AUTH.LOGIN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
[14:11:14][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:11:18][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:11:18][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(A) */ SEQ, NAME, IS_RAW_SALESCOUNT, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NVL(MAX(DEPTH), 0) FROM TB_ORGANIZATION WHERE COMPANY_SEQ = A.SEQ ) AS DEPTH FROM TB_COMPANY A WHERE SEQ = ? ORDER BY NAME
[14:11:18][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = ? AND DEPTH = 0 AND SORT = 0 AND ROWNUM = 1
[14:11:18][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ, NAME FROM TB_ORGANIZATION WHERE DEPTH = 0 AND SORT = 1 AND COMPANY_SEQ = ? ORDER BY NAME, SEQ
[14:11:18][DEBUG](com.nucco.beans.Sales) - SELECT /*+ ORDERED INDEX(A) USE_NL(B C) */ B.SEQ, B.PLACE, B.END_DATE FROM TB_VENDING_MACHINE_HISTORY A INNER JOIN TB_VENDING_MACHINE_PLACE B ON A.VM_SEQ = B.VM_SEQ AND ( A.END_DATE IS NULL OR A.END_DATE <= B.END_DATE ) INNER JOIN TB_VENDING_MACHINE C ON A.VM_SEQ = C.SEQ WHERE A.COMPANY_SEQ = ? AND A.ORGANIZATION_SEQ IN ( SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? UNION SELECT /*+ INDEX(TB_ORGANIZATION) */ SEQ FROM TB_ORGANIZATION WHERE SORT = 1 START WITH COMPANY_SEQ = ? AND PARENT_SEQ IN ( SELECT ? FROM DUAL UNION SELECT /*+ INDEX(TB_USER_APP_ORGAN) */ ORGANIZATION_SEQ FROM TB_USER_APP_ORGAN WHERE SEQ = ? ) CONNECT BY PRIOR SEQ = PARENT_SEQ ) GROUP BY B.PLACE, B.SEQ, B.END_DATE ORDER BY B.PLACE, B.SEQ
[14:11:26][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_TYPE' AND CODE <> '000' ORDER BY CODE
[14:11:26][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:11:35][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:11:35][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[14:11:35][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_LG A WHERE PAY_DATE BETWEEN '20210202' AND '20210302' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES_LG A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210202', -5) AND F_GET_WORKDAY@VANBT('20210302', -5) ) A WHERE YYYYMMDD BETWEEN '20210202' AND '20210302' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[14:11:40][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 74 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[14:11:40][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[14:11:40][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 74
[14:11:48][DEBUG](com.nucco.GlobalConfig) - { CALL PG_AUTH.MENU (?, ?, ?, ?) }
[14:11:48][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ CODE, NAME FROM TB_CODE WHERE TYPE = 'PAY_CARD' AND CODE <> '000' ORDER BY CODE
[14:11:48][DEBUG](com.nucco.beans.Sales) -  SELECT /*+ ORDERED USE_HASH(B C D E) */ A.*, NVL(TO_CHAR(TO_DATE(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MAX(CLOSING_DATE || CLOSING_TIME) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) < A.MIN_DATE ), 'YYYYMMDDHH24MISS') + INTERVAL '1' SECOND, 'YYYYMMDDHH24MISS'), MIN_DATE) AS START_DATE, ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE PARENT_SEQ = 0 AND SORT = 1 AND SEQ <> A.ORGANIZATION_SEQ START WITH SEQ = A.ORGANIZATION_SEQ CONNECT BY SEQ = PRIOR PARENT_SEQ) AS PARENT_ORGAN, B.NAME AS ORGAN, B.CODE AS ORGAN_CODE, C.PLACE AS PLACE, D.CODE AS VM_CODE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_DATE) */ COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(TRANSACTION_DATE || TRANSACTION_TIME) AS MIN_DATE, MAX(CASE WHEN CLOSING_DATE IS NOT NULL THEN CLOSING_DATE || NVL(CLOSING_TIME, '000000') END) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '07' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' THEN AMOUNT - COMMISSION + OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE) AS PAY_START_DATE, MAX(PAY_DATE) AS PAY_END_DATE FROM TB_SALES_LG A WHERE PAY_DATE BETWEEN '20210202' AND '20210302' AND PAY_STEP NOT IN ('00', '99') AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID UNION ALL SELECT COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID, MIN(CANCEL_DATE || CANCEL_TIME) AS MIN_DATE, MAX(( SELECT /*+ INDEX(TB_TXT_CLOSING) */ MIN(CLOSING_DATE || NVL(CLOSING_TIME, '000000')) FROM TB_TXT_CLOSING WHERE TERMINAL_ID = A.TERMINAL_ID AND (CLOSING_DATE || CLOSING_TIME) >= (A.CANCEL_DATE || A.CANCEL_TIME) )) AS END_DATE, COUNT(CASE WHEN PAY_TYPE IN ('02', '10') THEN 1 END) AS CNT_CASH, NVL(SUM(CASE WHEN PAY_TYPE IN ('02', '10') THEN -AMOUNT END), 0) AS AMOUNT_CASH, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN 1 END) AS PAY_CNT_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -COMMISSION END), 0) AS COMMISSION_CASH, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE IN ('02', '10') THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CASH, COUNT(CASE WHEN PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS CNT_CARD, NVL(SUM(CASE WHEN PAY_TYPE = '01' THEN -AMOUNT END), 0) AS AMOUNT_CARD, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' and pay_step <> '06' THEN 1 END) AS PAY_CNT_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -COMMISSION END), 0) AS COMMISSION_CARD, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '01' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_CARD, COUNT(CASE WHEN PAY_TYPE = '07' THEN 1 END) AS CNT_PAYCO, NVL(SUM(CASE WHEN PAY_TYPE = '07' THEN -AMOUNT END), 0) AS AMOUNT_PAYCO, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN 1 END) AS PAY_CNT_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -COMMISSION END), 0) AS COMMISSION_PAYCO, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '07' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PAYCO, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN 1 END) AS PAY_CNT_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_CSB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'CSB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_CSB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN 1 END) AS PAY_CNT_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_KRP, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'KRP' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_KRP, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN 1 END) AS PAY_CNT_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_MYB, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'MYB' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_MYB, COUNT(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN 1 END) AS PAY_CNT_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN COMMISSION END), 0) AS COMMISSION_PREPAY_TMN, NVL(SUM(CASE WHEN PAY_DATE IS NOT NULL AND PAY_TYPE = '11' AND PAY_CARD = 'TMN' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY_TMN, COUNT(CASE WHEN PAY_TYPE = '11' THEN 1 END) AS CNT_PREPAY, NVL(SUM(CASE WHEN PAY_TYPE = '11' THEN -AMOUNT END), 0) AS AMOUNT_PREPAY, COUNT(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN 1 END) AS PAY_CNT_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -COMMISSION END), 0) AS COMMISSION_PREPAY, NVL(SUM(CASE WHEN PAY_DATE2 IS NOT NULL AND PAY_TYPE = '11' THEN -AMOUNT + COMMISSION - OUTAMOUNT END), 0) AS PAY_AMOUNT_PREPAY, COUNT(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN 1 END) AS CNT_HELD, NVL(SUM(CASE WHEN PAY_TYPE IN ('01', '11') AND PAY_STEP IN ('01', '21') THEN AMOUNT END), 0) AS AMOUNT_HELD, COUNT(CASE WHEN PAY_STEP = '22' THEN 1 END) AS CNT_DECLINED, NVL(SUM(CASE WHEN PAY_STEP = '22' THEN AMOUNT END), 0) AS AMOUNT_DECLINED, MIN(PAY_DATE2) AS PAY_START_DATE, MAX(PAY_DATE2) AS PAY_END_DATE FROM ( SELECT /*+ INDEX(A IX_SALES_PAY_STEP) */ F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) AS YYYYMMDD, A.*, CASE WHEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) <= TO_CHAR(SYSDATE, 'YYYYMMDD') THEN F_GET_WORKDAY@VANBT(CANCEL_DATE, 5) END AS PAY_DATE2 FROM TB_SALES_LG A WHERE PAY_STEP = '29' AND PAY_DATE IS NOT NULL AND A.COMPANY_SEQ = 74 AND PAY_TYPE IN ('01') AND CANCEL_DATE BETWEEN F_GET_WORKDAY@VANBT('20210202', -5) AND F_GET_WORKDAY@VANBT('20210302', -5) ) A WHERE YYYYMMDD BETWEEN '20210202' AND '20210302' GROUP BY COMPANY_SEQ, ORGANIZATION_SEQ, VM_PLACE_SEQ, TERMINAL_ID ) A INNER JOIN TB_ORGANIZATION B ON A.ORGANIZATION_SEQ = B.SEQ INNER JOIN TB_VENDING_MACHINE_PLACE C ON A.VM_PLACE_SEQ = C.SEQ INNER JOIN TB_VENDING_MACHINE D ON C.VM_SEQ = D.SEQ ORDER BY PARENT_ORGAN, ORGAN, PLACE, VM_CODE, A.AMOUNT_CARD DESC
[14:11:54][DEBUG](com.nucco.beans.Sales) - SELECT NAME FROM ( SELECT /*+ INDEX(TB_ORGANIZATION) */ NAME FROM TB_ORGANIZATION WHERE COMPANY_SEQ = 74 AND SORT = 0 ORDER BY DEPTH DESC ) WHERE ROWNUM = 1
[14:11:54][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_CODE) */ NAME FROM TB_CODE WHERE TYPE = 'SUM_TYPE' AND CODE = '03'
[14:11:54][DEBUG](com.nucco.beans.Sales) - SELECT /*+ INDEX(TB_COMPANY) */ NAME FROM TB_COMPANY WHERE SEQ = 74
